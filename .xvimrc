set nowrap
"set nowrapscan
" Send input to system first. Might fix issues for non-US keyboard layouts.
set alwaysuseinputsource
" Use the OS clipboard by default (on versions compiled with `+clipboard`)
set clipboard=unnamed
" Add the g flag to search/replace by default
set gdefault
" Enable line numbers
set number
" Highlight cursor periodically
set blinkcursor
" Highlight searches
set hlsearch
" Ignore case of searches
set ignorecase
" Unless there are capital letters in the search term
set smartcase
" Highlight dynamically as pattern is typed
set incsearch
" Always show status line (2 is default)
set laststatus=2
" Disable error bells
set noerrorbells
" Use relative line numbers
set relativenumber

" Mapleader is currently not supported
"let mapleader = "\<Space>"

" Files
noremap <Space>W :w !sudo tee % > /dev/null<CR>
noremap <Space>ss :xccmd createSnapshot<CR>
noremap <Space>sr :xccmd restoreSnapshot<CR>

" Remap 'Go to last edit location' because backtick doesn't really work well on a german mac keyboard
:noremap <Space>l `.
" Repeat last command.
:noremap <Space>x @:<CR>
" Quickly replay the q macro.
:nnoremap <Space>q @q
" { and } are very inconvient to press on a german mac keyboard.
noremap <Space>j }
noremap <Space>J })
noremap <Space>k {
noremap <Space>K {)

"" Mode switching
" ESC is a buzzkill
inoremap ,, <ESC>

" Window management
" Go to window below
noremap <Space>wj <C-w>j
" Go left
noremap <Space>wh <C-w>h
" Go up
noremap <Space>wk <C-w>k
" Go right
noremap <Space>wl <C-w>l
" Create new window (with last used layout)
noremap <Space>wn <C-w>n
" Close window
noremap <Space>wq <C-w>q
" Split window horizontally
noremap <Space>ws <C-w>s
" Split window vertically
noremap <Space>wv <C-w>v
" Layout: Assistant Editors on the right
noremap <Space>ww :xccmd changeToAssistantLayout_RV<CR>
" Layout: Assistant Editors on the bottom
noremap <Space>we :xccmd changeToAssistantLayout_BH<CR>
" Layout: Assistant Editors stacked horizontally
noremap <Space>wr :xccmd changeToAssistantLayout_RH<CR>
" Layout: Assistant Editors stacked vertically
noremap <Space>wt :xccmd changeToAssistantLayout_BV<CR>
" Switch back to single editor
noremap <Space>wf :xccmd changeToStandardEditor<CR>
" Switch to split window (Standard + Assistant)
noremap <Space>wg :xccmd changeToGeniusEditor<CR>
" Version Control views
"noremap <Space>wy :xccmd changeToVersionEditor<CR>
noremap <Space>wx :xccmd changeToVersionEditorLogView<CR>
noremap <Space>wc :xccmd changeToVersionEditorComparisonView<CR>
noremap <Space>wb :xccmd changeToVersionEditorBlameView<CR>

" Text
nnoremap <Space>c :xccmd commentAndUncommentCurrentLines<CR>
vnoremap <Space>c :xccmd commentAndUncommentCurrentLines<CR>gv
" These two mappings are set in XCode directly as gv behaves strangely here
"vnoremap <C-j> :xccmd moveCurrentLineDown<CR>gv
"vnoremap <C-k> :xccmd moveCurrentLineUp<CR>gv
vnoremap <C-h> :xccmd shiftLeft<CR>gv
vnoremap <C-l> :xccmd shiftRight<CR>gv
" Select text i just pasted
noremap gV `[v`]

" Folding
noremap <Space>fd :xccmd fold<CR>
noremap <Space>fD :xccmd unfold<CR>
noremap <Space>fa :xccmd unfoldAll<CR>
noremap <Space>fm :xccmd foldAllMethods<CR>
noremap <Space>fM :xccmd unfoldAllMethods<CR>
noremap <Space>fc :xccmd foldAllComments<CR>
noremap <Space>fC :xccmd unfoldAllComments<CR>

" Refactoring
noremap <Space>rr :xccmd refactorRename<CR>
noremap <Space>rx :xccmd refactorExtract<CR>
noremap <Space>re :xccmd refactorEncapsulate<CR>
noremap <Space>rm :xccmd refactorMoveUp<CR>
noremap <Space>rM :xccmd refactorMoveDown<CR>
noremap <Space>rs :xccmd refactorCreateSuperclass<CR>

" Navigation
noremap <Space>o :xccmd openQuickly<CR>
noremap <Space>n :xccmd jumpToNextCounterpart<CR>
noremap <Space>N :xccmd jumpToPreviousCounterpart<CR>
noremap <Space>i :xccmd jumpToNextIssue<CR>
noremap <Space>I :xccmd jumpToPreviousIssue<CR>
noremap <Space>g :xccmd goBackInHistoryByCommand<CR>
noremap <Space>G :xccmd goForwardInHistoryByCommand<CR>
noremap gt :xccmd selectNextTab<CR>
noremap gT :xccmd selectPreviousTab<CR>
noremap gl :xccmd openQuicklyScoped<CR>
" Using fixNextIssue/fixPreviousIssue this way will crash XCode
"noremap <Space>fi :xccmd fixNextIssue<CR>
"noremap <Space>fI :xccmd fixPreviousIssue<CR>

" Menus
noremap <Space>mh :xccmd showPreviousFilesHistoryMenu<CR>
noremap <Space>mo :xccmd showDocumentItemsMenu<CR>
noremap <Space>mg :xccmd showGroupFilesMenu<CR>

" Toggle bars
noremap <Space>th :xccmd toggleNavigatorsVisibility<CR>
noremap <Space>tj :xccmd toggleDebuggerVisibility<CR>
noremap <Space>tl :xccmd toggleUtilitiesVisibility<CR>
noremap <Space>tk :xccmd toggleToolbarShown<CR>
noremap <Space>ta :xccmd toggleUtilitiesVisibility<CR> :xccmd toggleDebuggerVisibility<CR> :xccmd toggleNavigatorsVisibility<CR>
noremap <Space>tt :xccmd toggleDebuggerVisibility<CR> :xccmd toggleNavigatorsVisibility<CR>
noremap <Space>tw :set wrap<CR>
noremap <Space>tW :set nowrap<CR>
noremap <Space>ts :set wrapscan<CR>
noremap <Space>tS :set nowrapscan<CR>

" Find and Replace
noremap <Space>fv :xccmd find<CR>
noremap <Space>fv :xccmd findAndReplace<CR>
noremap <Space>fw :xccmd findSelectedTextInWorkspace<CR>
noremap <Space>fW :xccmd findAndReplaceInWorkspace<CR>
noremap <Space>fn :xccmd findNext<CR>
noremap <Space>fN :xccmd findPrevious<CR>
noremap <Space>fr :xccmd replaceAndFindNext<CR>
noremap <Space>fR :xccmd replaceAndFindPrevious<CR>

"" Debugging
noremap <Space>ba :xccmd toggleBreakpoints<CR>
noremap <Space>bb :xccmd toggleBreakpointAtCurrentLine<CR>
noremap <Space>bv :xccmd changeToBreakpointsNavigator<CR>
noremap <Space>dv :xccmd changeToDebuggerNavigator<CR>
noremap <Space>dc :xccmd clearConsole<CR>
noremap <Space>dt :xccmd pauseOrContinue<CR>
noremap <Space>do :xccmd stepOver<CR>
noremap <Space>di :xccmd stepInto<CR>
noremap <Space>dq :xccmd stepOut<CR>
noremap <Space>dm :xccmd viewMemory<CR>

"" Help
" The xccommand showQuickHelp is identical to :xhelp
noremap <Space>hh :xccmd showQuickHelp<CR>
noremap <Space>hs :xccmd searchDocumentationForSelectedText<CR>

"" Execution
noremap <Space>er :xccmd runActiveRunContext<CR>
noremap <Space>eR :xccmd editAndRunActiveRunContext<CR>
noremap <Space>et :xccmd testActiveRunContext<CR>
noremap <Space>eT :xccmd editAndTestActiveRunContext<CR>
noremap <Space>ep :xccmd profileActiveScheme<CR>
noremap <Space>eP :xccmd editAndProfileActiveScheme<CR>
noremap <Space>ea :xccmd analyzeActiveRunContext<CR>
noremap <Space>eA :xccmd editAndAnalyzeActiveRunContext<CR>
noremap <Space>ec :xccmd cancelCurrentExecution<CR>
noremap <Space>eb :xccmd buildActiveRunContext<CR>
noremap <Space>eC :xccmd cleanActiveRunContext<CR>

