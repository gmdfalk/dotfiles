#!/usr/bin/env bash
# Simple sprunge.us pastebin client

# Default is ptpb.pw. Alternatively, use http://sprunge.us here.
SITE="https://ptpb.pw"
URL_REGEX='(http|ftp|https):\/\/(sprunge\.us|ptpb.pw)\/[A-Za-z0-9]{4,}'

usage() {
    local script_name=$(basename $0)
    cat << EOF
Description:
    Upload data and fetch URL from the pastebin $SITE

Usage:
    <command> | $script_name
    $script_name < <file>
    $script_name <file>
    $script_name <string>

Example:
    cat some_script.sh | $script_name

Notes:
    Precedence is "piped data" < "redirected stdin" < "file" < "string"
EOF
    exit
}
[[ "$1" == "--help" ]] && usage

have() {
    command -v "$1" >/dev/null 2>&1
}

seturl() {
    setfattr -n "user.sprunge-url" -v "$2" "$1" || :
} 2>/dev/null

getsel() {
    if have xclip; then
        xclip -out -selection primary
    elif have xsel; then
        xsel -o -p
    else
        echo "no xclip nor xsel" >&2
        false
    fi
}

putclip() {
    if [ "$DISPLAY" ]; then
        if have xclip; then
            echo "$1" | xclip -in -selection clipboard
        elif have xsel; then
            echo "$1" | xsel -i -b
        fi
    fi
    putclip() { true; }
}

post() {
    local target="c"
    [[ "$SITE" == *"sprunge"* ]] && target="sprunge"
    local url=$(curl -sF "${target}=<$1" $SITE)
    if [ "$url" ]; then
        echo "$url"
        url=$(echo "$url" | grep -o -E ${URL_REGEX})
        echo "$url"
        putclip $url
    else
        echo "...failed"
    fi
}

if [ ! "$1" ] || [ "$1" = "-" ]; then
    # curl handles stdin buffering in a funny way, often
    # resulting in only the first write() to be pastebinned
    file=`mktemp /tmp/sprunge.XXXXXXXX`
    if [ ! "$1" ] && [ -t 0 ] && [ "$DISPLAY" ]; then
        getsel > "$file"
    elif [ -t 0 ]; then
        printf "\e[1mInput text to pastebin:\e[m\n"
        cat > "$file"
    else
        cat > "$file"
    fi
    if [ -s "$file" ]; then
        post "$file"
    else
        echo "stdin empty" >&2
    fi
    rm -f "$file"
else
    for file; do
        echo -n "$file â†’ "
        post "$file"
    done
fi
