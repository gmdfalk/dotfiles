#!/usr/bin/env bash
#
# pbrisbin 2010
#
# http://pbrisbin.com:8080/bin/updatehosts
#
# this script automatically writes an /etc/hosts file
# with the proper localhost line, some individual lan
# ip lines as per lanip[], and a comprehensive
# blacklist file downloaded from someonewhocares.org
#
###

# utilities
logger() { echo "$(date +'[ %d %b %Y %H %M ]') :: $*" | tee -a $log; }

errorout() { logger "error: $*"; exit 1; }

message() { echo "usage: updatehosts [-v]"; exit 1; }

write_hosts_file() {
  local entry host ip

  # write my entries
  cat << EOF
#
# /etc/hosts: static lookup table for host names
#
# auto-generated by $(basename $0) on $(date -R)
#
###

#<ip-address>   <hostname.domain.org>   <hostname>
127.0.0.1   localhost.localdomain   localhost   $HOSTNAME
::1     localhost.localdomain   localhost   $HOSTNAME

EOF

  # write my LAN ips
  for entry in "${lanips[@]}"; do
    host="${entry%%::*}"
    ip="${entry##*::}"

    echo -e "$ip\t$host.localdomain\t$host"

  done

  # satisfy the license
  cat << EOF
  
# This hosts file is brought to you by Dan Pollock and can be found at
# http://someonewhocares.org/hosts/
# You are free to copy and distribute this file, as long the original 
# URL is included. See below for acknowledgements.

EOF

  # just the raw ips and minus the localhost block
   wget -q -O - "http://someonewhocares.org/hosts" | grep -v 'local\|host' | grep '^127'

  # write an EOF
  cat << EOF

# End of file
EOF
}

# must be root
[[ $(id -u) -ne 0 ]] && errorout 'you must be root'
[[ -z "$HOSTNAME" ]] && errorout 'hostname not found'
[[ "$1" = '-v' ]] && verbose=true || verbose=false

# constants
log=$HOME/.logs/updatehosts.log
hosts='/etc/hosts'
temp='/tmp/hosts'

# array of 'host::ip'; will be added at top of file (after localhost)
lanips=( 
  'router::192.168.0.1'
  'htpc::192.168.0.2'
  'felix::192.168.0.3'
  'kristin::192.168.0.4'
  'patrick::192.168.0.5'
  'printer::192.168.0.99'
  'ap::192.168.1.1'
  )

$verbose                   && logger "backing up current $hosts..."
cp "$hosts" "$hosts.bak"   || errorout 'failed backing up current hosts file'
$verbose                   && logger "writing new hosts file to $temp..."
write_hosts_file > "$temp" || errorout 'failed writing new hosts file'
$verbose                   && logger "moving $temp to $hosts..."
mv "$temp" "$hosts"        || errorout 'failed committing new hosts file'

logger 'success.'
