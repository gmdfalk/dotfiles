" Settings {{{

" Behaviour {
" Set the port to be used with the editWithVim insert mode command. Default 8001.
"let vimport = 8001

" Set the amount of pixels scrolled when using the scrollUp and scrollDown commands. Default 70.
let scrollstep = 80

" Set the percent of the page to be scrolled by when using the scrollFullPageUp and scrollFullPageDown commands. Default 0.
"let fullpagescrollpercent = 0

" The duration of smooth scrolling. Default 500.
let scrollduration = 300

" The step size when zooming the page in/out. Default 0.1.
"let zoomfactor = 0.1

" Use <C-n> and <C-p> to cycle through completion results (requires you to set the nextCompletionResult keybinding in the chrome://extensions page (bottom right)). Default false.
"set nocncpcompletion

" Use smooth scrolling. Default false.
"set nosmoothscroll

" If a GitHub Gist is used to sync settings, pull updates every hour (and when Chrome restarts)	. Default false.
set autoupdategist

" Open new tabs like Chrome does rather than next to the currently opened tab. Default false.	
set nativelinkorder

" Auto open the changelog when cVim is updated. Default true.
"set changelog

" Disable cVim on the sites matching one of the patterns. Items prefixed with '@' act as a whitelist. Default [].
"let blacklists = ["https://mail.google.com/*", "*://mail.google.com/*", "@https://mail.google.com/mail/*"]

" Set the command to be issued with the editWithVim command. Default "gvim -f".
"let vimcommand = "gvim -f"

" Set a list of characters to be remapped (see vims langmap). Default "".
"let langmap = ""

" Use insert mappings to navigate the cursor in text boxes (see bindings below). Default true.
"set insertmappings

" Add a persistent QuickMark. Default none.
"let qmark a = ["http://google.com", "http://reddit.com"]
" }

" Appearance {
" Show the heads-up-display. Default true.
"set hud

" Set the default position of the command bar. Default "top".
"let barposition	= "top"

" Show fade effect when link hints open and close. Default false.
"set nolinkanimations

" Use the default chrome://newtab page instead of a blank page. Default false.
"set nodefaultnewtabpage

" Display the tab index in the tab's title. Default false.
"set noshowtabindices

" Automatically show a list of command completions when the command bar is opened. Default false.
"set nocompleteonopen

" Hide the mouse cursor when scrolling (useful for Linux, which doesn't auto-hide the cursor on keydown). Default false.
"set noautohidecursor

" Allows websites to automatically focus an input box when they are first loaded. Default true.
set noautofocus
" }

" { Search
" Use regexp in find mode. Default true.
"set regexp

" case-insensitive find mode searches except when input contains a capital letter. Default true.
"set smartcase

" Begin auto-highlighting find mode matches when input length is greater thant two characters. Default true.
"set incsearch

" Ignore search case in find mode. Default true.
"set ignorecase

" The pattern looked for when navigating a page's back button. Default "((?!last)(prev(ious)?|newer|back|«|less|<|‹| )+)".
let previousmatchpattern = "((?!last)(prev(ious)?|newer|back|«|less|<|‹| )+)"

" the pattern looked for when navigation a page's next button. Default "((?!first)(next|older|more|>|›|»|forward| )+)".
let nextmatchpattern = "((?!first)(next|older|more|>|›|»|forward| )+)"

" Set the amount of results displayed in the command bar. Default 25.
let searchlimit = 30

" Defines a search engine. First index is the fallback site if no argument is entered.
let searchengine google = ["https://encrypted.google.com", "https://encrypted.google.com/#q=%s"]
let searchengine googlede = ["https://www.google.de/?gws_rd=ssl", "https://www.google.de/?gws_rd=ssl#q=%s"]
let searchengine leon = ["https://dict.leo.org/ende", "https://dict.leo.org/ende/index_de.html#/search=%s"]
let searchengine leos = ["https://dict.leo.org/esde", "https://dict.leo.org/esde/index_de.html#/search=%s"]
let searchengine leof = ["https://dict.leo.org/frde", "https://dict.leo.org/frde/index_de.html#/search=%s"]

" Use only the specified search engines. Default ["google", "duckduckgo", "wikipedia", "amazon"].
let completionenginges = ["google", "duckduckgo", "wikipedia", "amazon", "googlede", "leon", "leos", "leof"]

" Set the default search engine. Default "google".
"let defaultengine = "google"

" Create a shortcut for a search engine.
let searchalias g = "google"
let searchalias gg = "googlede"
let searchalias ys = "youtube"
let searchalias ims = "imdb"
let searchalias ams = "amazon"
let searchalias wks = "wikipedia"
let searchalias ddg = "duckduckgo"
" }

" { Hints
" The amount of time (in milliseconds) to wait before taking input after opening a link hint with typelinkhints and numerichints enabled. Default 300.
let typelinkhintsdelay = 300

" Set the default characters to be used in link hint mode. Default "asdfgqwertzxcvb".
"let hintcharacters = "asdfgqwertzxcvb"

" Use numbers for link hints instead of a set of characters. Default false.
set numerichints

" Dim letter matches in hint characters rather than remove them from the hint. Default true.
"set dimhintcharacters

" Animate link hints as they appear. Default false.
"set noscalehints

" (numerichints required) Type text in the link to narrow down numeric hints. Default false.
set typelinkhints

" Sort link hint lettering by the link's distance from the top-left corner of the page. Default false.
set sortlinkhints
" }

" Configfile {
" Read the cVimrc config from configpath (when this is set, you connot save from cVim's options page. Default false.
"set nolocalconfig

" Read the cVimrc from this local file when configpath is set. Default "".
"let configpath = "~/.cvimrc"

" The directory to replace "~" when using the file command. Default "".
"let homedirectory = ""
" }
" }}}

" Mappings {{{
" Leader {
" The default <Leader> key. Default "\".
let mapleader = "<Space>"

" The amount of time to wait for a <Leader> mapping in milliseconds. Default 1000.
let timeoutlen = 500
" }

" Search {
map s :open g<Space>
map S :tabopen g<Space>
" }

map <C-h> :set hud!<CR>
map <Leader>td :duplicate<CR>

" }}}
